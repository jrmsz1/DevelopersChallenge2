// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SERVICESAPI.DataAccess;

namespace SERVICESAPI.Migrations
{
    [DbContext(typeof(OFXContext))]
    partial class OFXContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SERVICESAPI.Models.Entities.ACCOUNT", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("ACCTID");

                    b.Property<int>("BANKID");

                    b.Property<string>("COUNTRY");

                    b.Property<DateTimeOffset>("DATECREATED");

                    b.Property<string>("FIRSTNAME");

                    b.Property<string>("IDENTIFICATION");

                    b.Property<string>("LASTNAME");

                    b.HasKey("Id");

                    b.HasIndex("FIRSTNAME");

                    b.HasIndex("IDENTIFICATION");

                    b.HasIndex("BANKID", "ACCTID");

                    b.ToTable("ACCOUNT");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ACCTID = 7037300576L,
                            BANKID = 341,
                            DATECREATED = new DateTimeOffset(new DateTime(2020, 11, 30, 14, 31, 31, 333, DateTimeKind.Unspecified).AddTicks(4123), new TimeSpan(0, 0, 0, 0, 0)),
                            FIRSTNAME = "Xayah",
                            IDENTIFICATION = "0341-7037300576",
                            LASTNAME = "NIBO"
                        });
                });

            modelBuilder.Entity("SERVICESAPI.Models.Entities.OFX_BATCH", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("ACCTID");

                    b.Property<string>("ACCTTYPE");

                    b.Property<decimal>("BALAMT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BANKID");

                    b.Property<string>("CHARSET");

                    b.Property<string>("COMPRESSION");

                    b.Property<string>("CURDEF");

                    b.Property<string>("DATA");

                    b.Property<DateTimeOffset>("DTASOF");

                    b.Property<string>("DTASOF_TMZ");

                    b.Property<DateTimeOffset>("DTEND");

                    b.Property<string>("DTEND_TMZ");

                    b.Property<DateTimeOffset?>("DTSERVER");

                    b.Property<string>("DTSERVER_TMZ");

                    b.Property<DateTimeOffset>("DTSTART");

                    b.Property<string>("DTSTART_TMZ");

                    b.Property<DateTimeOffset>("DT_CREATED");

                    b.Property<string>("ENCODING");

                    b.Property<string>("LANGUAGE");

                    b.Property<string>("NEWFILEUID");

                    b.Property<long>("OFXHEADER");

                    b.Property<string>("OLDFILEUID");

                    b.Property<string>("SECURITY");

                    b.Property<int>("SONRS_STA_CODE");

                    b.Property<string>("SONRS_STA_SEVERITY");

                    b.Property<int>("STMTTRNRS_STA_CODE");

                    b.Property<string>("STMTTRNRS_STA_SEVERITY");

                    b.Property<int>("STMTTRNRS_TRNUID");

                    b.Property<string>("VERSION");

                    b.HasKey("Id");

                    b.ToTable("OFX_BATCH");
                });

            modelBuilder.Entity("SERVICESAPI.Models.Entities.OFX_STMTTRN", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("AccountId");

                    b.Property<long>("BATCHId");

                    b.Property<DateTimeOffset>("DTPOSTED");

                    b.Property<string>("DTPOSTED_TMZ");

                    b.Property<DateTimeOffset?>("DT_RECONCILIATION");

                    b.Property<string>("MEMO");

                    b.Property<decimal>("TRNAMT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TRNTYPE");

                    b.HasKey("Id");

                    b.HasIndex("BATCHId");

                    b.HasIndex("AccountId", "DTPOSTED", "TRNTYPE", "TRNAMT");

                    b.ToTable("STMTTRN");
                });

            modelBuilder.Entity("SERVICESAPI.Models.Entities.OFX_STMTTRN", b =>
                {
                    b.HasOne("SERVICESAPI.Models.Entities.ACCOUNT", "ACCOUNT")
                        .WithMany("STMTTRNS")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SERVICESAPI.Models.Entities.OFX_BATCH", "BATCH")
                        .WithMany("STMTTRNS")
                        .HasForeignKey("BATCHId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
